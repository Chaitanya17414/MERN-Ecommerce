{"ast":null,"code":"import { registerUser } from \"../Actions/actions\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  token: localStorage.getItem(\"token\") ? JSON.parse(localStorage.getItem(\"token\")) : [],\n  _id: \"\",\n  name: \"\",\n  email: \"\",\n  registerStatus: \"\",\n  registerError: \"\",\n  loginStatus: \"\",\n  loginError: \"\",\n  userLoaded: false\n};\nconst authSlice = createSlice({\n  name: \"Cart\",\n  initialState,\n  reducer: {\n    loadUser(state, action) {\n      const token = state.token;\n      if (token) {\n        const user = jwtDecode(token);\n        return {\n          ...state,\n          token,\n          name: user.name,\n          email: user.email,\n          _id: user._id,\n          userLoaded: true\n        };\n      } else return {\n        ...state,\n        userLoaded: true\n      };\n    },\n    logoutUser(state, action) {\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: \"\",\n        name: \"\",\n        email: \"\",\n        _id: \"\",\n        registerStatus: \"\",\n        registerError: \"\",\n        loginStatus: \"\",\n        loginError: \"\"\n      };\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(registerUser.pending, state => {\n      state.registerStatus = 'pending';\n    }).addCase(registerUser.fulfilled, (state, action) => {\n      if (action.payload) {\n        const user = jwtDecode(action.payload);\n        return {\n          ...state,\n          token: action.payload,\n          name: user.name,\n          email: user.email,\n          _id: user._id,\n          registerStatus: \"Success\"\n        };\n      } else return state;\n    }).addCase(registerUser.rejected, (state, action) => {\n      state.registerStatus = 'rejected';\n      state.registerError = action.payload;\n    });\n  }\n});\nexport const {\n  loadUser,\n  logoutUser\n} = authSlice;\nexport default authSlice.reducer;","map":{"version":3,"names":["registerUser","jwtDecode","createSlice","initialState","token","localStorage","getItem","JSON","parse","_id","name","email","registerStatus","registerError","loginStatus","loginError","userLoaded","authSlice","reducer","loadUser","state","action","user","logoutUser","removeItem","extraReducers","builder","addCase","pending","fulfilled","payload","rejected"],"sources":["/home/cl00807248/Desktop/mern-ecommerce/Client/src/Components/Redux/Slices/authSlice.js"],"sourcesContent":["import { registerUser } from \"../Actions/actions\";\nimport  {jwtDecode} from \"jwt-decode\";\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    token: localStorage.getItem(\"token\")? JSON.parse(localStorage.getItem(\"token\")):[],\n    _id: \"\",\n    name:\"\",\n    email:\"\",\n    registerStatus:\"\",\n    registerError:\"\",\n    loginStatus:\"\",\n    loginError:\"\",\n    userLoaded: false\n\n}\nconst authSlice = createSlice({\n    name:\"Cart\",\n    initialState,\n    reducer: {\n        loadUser(state, action) {\n            const token = state.token;\n      \n            if (token) {\n              const user = jwtDecode(token);\n              return {\n                ...state,\n                token,\n                name: user.name,\n                email: user.email,\n                _id: user._id,\n                userLoaded: true,\n              };\n            } else return { ...state, userLoaded: true };\n          },\n          logoutUser(state, action) {\n            localStorage.removeItem(\"token\");\n      \n            return {\n              ...state,\n              token: \"\",\n              name: \"\",\n              email: \"\",\n              _id: \"\",\n              registerStatus: \"\",\n              registerError: \"\",\n              loginStatus: \"\",\n              loginError: \"\",\n            };\n          },\n    },\n    extraReducers: (builder) => {\n        builder\n          .addCase(registerUser.pending, (state) => {\n            state.registerStatus = 'pending';\n          })\n          .addCase(registerUser.fulfilled, (state, action) => {\n            if(action.payload) {\n                const user = jwtDecode(action.payload)\n                return {\n                    ...state,\n                    token: action.payload,\n                    name:user.name,\n                    email:user.email,\n                    _id:user._id,\n                    registerStatus:\"Success\"\n                }\n            }else return state \n          })\n          .addCase(registerUser.rejected, (state, action) => {\n            state.registerStatus = 'rejected';\n            state.registerError= action.payload;\n          });\n    }\n})\n\nexport const {loadUser,logoutUser} = authSlice\nexport default authSlice.reducer"],"mappings":"AAAA,SAASA,YAAY,QAAQ,oBAAoB;AACjD,SAASC,SAAS,QAAO,YAAY;AACrC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,GAAEC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,GAAC,EAAE;EAClFG,GAAG,EAAE,EAAE;EACPC,IAAI,EAAC,EAAE;EACPC,KAAK,EAAC,EAAE;EACRC,cAAc,EAAC,EAAE;EACjBC,aAAa,EAAC,EAAE;EAChBC,WAAW,EAAC,EAAE;EACdC,UAAU,EAAC,EAAE;EACbC,UAAU,EAAE;AAEhB,CAAC;AACD,MAAMC,SAAS,GAAGf,WAAW,CAAC;EAC1BQ,IAAI,EAAC,MAAM;EACXP,YAAY;EACZe,OAAO,EAAE;IACLC,QAAQA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACpB,MAAMjB,KAAK,GAAGgB,KAAK,CAAChB,KAAK;MAEzB,IAAIA,KAAK,EAAE;QACT,MAAMkB,IAAI,GAAGrB,SAAS,CAACG,KAAK,CAAC;QAC7B,OAAO;UACL,GAAGgB,KAAK;UACRhB,KAAK;UACLM,IAAI,EAAEY,IAAI,CAACZ,IAAI;UACfC,KAAK,EAAEW,IAAI,CAACX,KAAK;UACjBF,GAAG,EAAEa,IAAI,CAACb,GAAG;UACbO,UAAU,EAAE;QACd,CAAC;MACH,CAAC,MAAM,OAAO;QAAE,GAAGI,KAAK;QAAEJ,UAAU,EAAE;MAAK,CAAC;IAC9C,CAAC;IACDO,UAAUA,CAACH,KAAK,EAAEC,MAAM,EAAE;MACxBhB,YAAY,CAACmB,UAAU,CAAC,OAAO,CAAC;MAEhC,OAAO;QACL,GAAGJ,KAAK;QACRhB,KAAK,EAAE,EAAE;QACTM,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE,EAAE;QACTF,GAAG,EAAE,EAAE;QACPG,cAAc,EAAE,EAAE;QAClBC,aAAa,EAAE,EAAE;QACjBC,WAAW,EAAE,EAAE;QACfC,UAAU,EAAE;MACd,CAAC;IACH;EACN,CAAC;EACDU,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACJC,OAAO,CAAC3B,YAAY,CAAC4B,OAAO,EAAGR,KAAK,IAAK;MACxCA,KAAK,CAACR,cAAc,GAAG,SAAS;IAClC,CAAC,CAAC,CACDe,OAAO,CAAC3B,YAAY,CAAC6B,SAAS,EAAE,CAACT,KAAK,EAAEC,MAAM,KAAK;MAClD,IAAGA,MAAM,CAACS,OAAO,EAAE;QACf,MAAMR,IAAI,GAAGrB,SAAS,CAACoB,MAAM,CAACS,OAAO,CAAC;QACtC,OAAO;UACH,GAAGV,KAAK;UACRhB,KAAK,EAAEiB,MAAM,CAACS,OAAO;UACrBpB,IAAI,EAACY,IAAI,CAACZ,IAAI;UACdC,KAAK,EAACW,IAAI,CAACX,KAAK;UAChBF,GAAG,EAACa,IAAI,CAACb,GAAG;UACZG,cAAc,EAAC;QACnB,CAAC;MACL,CAAC,MAAK,OAAOQ,KAAK;IACpB,CAAC,CAAC,CACDO,OAAO,CAAC3B,YAAY,CAAC+B,QAAQ,EAAE,CAACX,KAAK,EAAEC,MAAM,KAAK;MACjDD,KAAK,CAACR,cAAc,GAAG,UAAU;MACjCQ,KAAK,CAACP,aAAa,GAAEQ,MAAM,CAACS,OAAO;IACrC,CAAC,CAAC;EACR;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAACX,QAAQ;EAACI;AAAU,CAAC,GAAGN,SAAS;AAC9C,eAAeA,SAAS,CAACC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}