{"ast":null,"code":"const {\n  createSlice\n} = require(\"@reduxjs/toolkit\");\nconst initialState = {\n  token: localStorage.getItem(\"token\") ? JSON.parse(localStorage.getItem(\"token\")) : [],\n  _id: \"\",\n  name: \"\",\n  email: \"\",\n  registerStatus: \"\",\n  registerError: \"\",\n  loginStatus: \"\",\n  loginError: \"\",\n  userLoaded: false\n};\nconst cartSlice = createSlice({\n  name: \"Cart\",\n  initialState,\n  reducer: {},\n  extraReducers: {}\n});\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","require","initialState","token","localStorage","getItem","JSON","parse","_id","name","email","registerStatus","registerError","loginStatus","loginError","userLoaded","cartSlice","reducer","extraReducers"],"sources":["/home/cl00807248/Desktop/mern-ecommerce/Client/src/Components/Redux/Slices/authSlice.js"],"sourcesContent":["const { createSlice } = require(\"@reduxjs/toolkit\");\n\nconst initialState = {\n    token: localStorage.getItem(\"token\")? JSON.parse(localStorage.getItem(\"token\")):[],\n    _id: \"\",\n    name:\"\",\n    email:\"\",\n    registerStatus:\"\",\n    registerError:\"\",\n    loginStatus:\"\",\n    loginError:\"\",\n    userLoaded: false\n\n}\nconst cartSlice = createSlice({\n    name:\"Cart\",\n    initialState,\n    reducer: ({}),\n    extraReducers: ({\n\n    })\n})\n\n\nexport default cartSlice.reducer"],"mappings":"AAAA,MAAM;EAAEA;AAAY,CAAC,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAEnD,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,GAAEC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,GAAC,EAAE;EAClFG,GAAG,EAAE,EAAE;EACPC,IAAI,EAAC,EAAE;EACPC,KAAK,EAAC,EAAE;EACRC,cAAc,EAAC,EAAE;EACjBC,aAAa,EAAC,EAAE;EAChBC,WAAW,EAAC,EAAE;EACdC,UAAU,EAAC,EAAE;EACbC,UAAU,EAAE;AAEhB,CAAC;AACD,MAAMC,SAAS,GAAGhB,WAAW,CAAC;EAC1BS,IAAI,EAAC,MAAM;EACXP,YAAY;EACZe,OAAO,EAAG,CAAC,CAAE;EACbC,aAAa,EAAG,CAEhB;AACJ,CAAC,CAAC;AAGF,eAAeF,SAAS,CAACC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}