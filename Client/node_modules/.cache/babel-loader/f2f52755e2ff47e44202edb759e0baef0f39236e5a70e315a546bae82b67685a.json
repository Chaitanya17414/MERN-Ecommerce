{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n// const productSlice = createSlice({\n//     name: \"product\",\n//     initialState:{\n//         products:[]\n//     },\n//     reducers: {\n//         productList: (state, action) =>{\n//             state.products.push(action.payload);\n//         }\n//     }\n// })\n\nexport const fetchAllProducts = createAsyncThunk('products/fetchAll', axios.get(\"/api/products/getallproducts\").then(response => {\n  console.log(response.data);\n  return response.data;\n}).cat);\nconst productSlice = createSlice({\n  name: 'products',\n  initialState: {\n    products: [],\n    status: 'idle',\n    error: null\n  },\n  reducers: {\n    // Add reducers if needed\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchAllProducts.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchAllProducts.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.products.push(action.payload);\n    }).addCase(fetchAllProducts.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    });\n  }\n});\nexport default productSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","fetchAllProducts","get","then","response","console","log","data","cat","productSlice","name","initialState","products","status","error","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","push","payload","rejected","message","reducer"],"sources":["/home/cl00807248/Desktop/mern-ecommerce/Client/src/Components/Redux/productSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n// const productSlice = createSlice({\n//     name: \"product\",\n//     initialState:{\n//         products:[]\n//     },\n//     reducers: {\n//         productList: (state, action) =>{\n//             state.products.push(action.payload);\n//         }\n//     }\n// })\n\nexport const fetchAllProducts = createAsyncThunk(\n    'products/fetchAll',\n      axios.get(\"/api/products/getallproducts\").then((response) => {\n        console.log(response.data)\n        return response.data;\n      }).cat\n  );\nconst productSlice = createSlice({\n    name: 'products',\n    initialState: {\n      products: [],\n      status: 'idle',\n      error: null\n    },\n    reducers: {\n      // Add reducers if needed\n    },\n    extraReducers: (builder) => {\n      builder\n        .addCase(fetchAllProducts.pending, (state) => {\n          state.status = 'loading';\n        })\n        .addCase(fetchAllProducts.fulfilled, (state, action) => {\n          state.status = 'succeeded';\n          state.products.push(action.payload);\n        })\n        .addCase(fetchAllProducts.rejected, (state, action) => {\n          state.status = 'failed';\n          state.error = action.error.message;\n        });\n    },\n  });\n\n\nexport default  productSlice.reducer;"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,gBAAgB,GAAGH,gBAAgB,CAC5C,mBAAmB,EACjBE,KAAK,CAACE,GAAG,CAAC,8BAA8B,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;EAC3DC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC;EAC1B,OAAOH,QAAQ,CAACG,IAAI;AACtB,CAAC,CAAC,CAACC,GACP,CAAC;AACH,MAAMC,YAAY,GAAGV,WAAW,CAAC;EAC7BW,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IACZC,QAAQ,EAAE,EAAE;IACZC,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACR;EAAA,CACD;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACjB,gBAAgB,CAACkB,OAAO,EAAGC,KAAK,IAAK;MAC5CA,KAAK,CAACP,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDK,OAAO,CAACjB,gBAAgB,CAACoB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACtDF,KAAK,CAACP,MAAM,GAAG,WAAW;MAC1BO,KAAK,CAACR,QAAQ,CAACW,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IACrC,CAAC,CAAC,CACDN,OAAO,CAACjB,gBAAgB,CAACwB,QAAQ,EAAE,CAACL,KAAK,EAAEE,MAAM,KAAK;MACrDF,KAAK,CAACP,MAAM,GAAG,QAAQ;MACvBO,KAAK,CAACN,KAAK,GAAGQ,MAAM,CAACR,KAAK,CAACY,OAAO;IACpC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAGJ,eAAgBjB,YAAY,CAACkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}