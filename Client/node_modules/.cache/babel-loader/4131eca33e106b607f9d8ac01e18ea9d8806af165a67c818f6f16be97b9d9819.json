{"ast":null,"code":"import { registerUser } from \"../Actions/actions\";\nconst {\n  createSlice\n} = require(\"@reduxjs/toolkit\");\nconst initialState = {\n  token: localStorage.getItem(\"token\") ? JSON.parse(localStorage.getItem(\"token\")) : [],\n  _id: \"\",\n  name: \"\",\n  email: \"\",\n  registerStatus: \"\",\n  registerError: \"\",\n  loginStatus: \"\",\n  loginError: \"\",\n  userLoaded: false\n};\nconst cartSlice = createSlice({\n  name: \"Cart\",\n  initialState,\n  reducer: {},\n  extraReducers: builder => {\n    builder.addCase(registerUser.pending, state => {\n      state.registerStatus = 'loading';\n    }).addCase(registerUser.fulfilled, (state, action) => {\n      if (action.payload) {} else retur;\n      state.registerStatus = 'succeeded';\n      state.token = action.payload;\n    }).addCase(registerUser.rejected, (state, action) => {\n      state.registerStatus = 'failed';\n      state.registerError = action.error.message;\n    });\n  }\n});\nexport default cartSlice.reducer;","map":{"version":3,"names":["registerUser","createSlice","require","initialState","token","localStorage","getItem","JSON","parse","_id","name","email","registerStatus","registerError","loginStatus","loginError","userLoaded","cartSlice","reducer","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","retur","rejected","error","message"],"sources":["/home/cl00807248/Desktop/mern-ecommerce/Client/src/Components/Redux/Slices/authSlice.js"],"sourcesContent":["import { registerUser } from \"../Actions/actions\";\n\nconst { createSlice } = require(\"@reduxjs/toolkit\");\n\nconst initialState = {\n    token: localStorage.getItem(\"token\")? JSON.parse(localStorage.getItem(\"token\")):[],\n    _id: \"\",\n    name:\"\",\n    email:\"\",\n    registerStatus:\"\",\n    registerError:\"\",\n    loginStatus:\"\",\n    loginError:\"\",\n    userLoaded: false\n\n}\nconst cartSlice = createSlice({\n    name:\"Cart\",\n    initialState,\n    reducer: ({}),\n    extraReducers: (builder) => {\n        builder\n          .addCase(registerUser.pending, (state) => {\n            state.registerStatus = 'loading';\n          })\n          .addCase(registerUser.fulfilled, (state, action) => {\n            if(action.payload) {\n\n            }else retur\n            state.registerStatus = 'succeeded';\n            state.token = action.payload;\n          })\n          .addCase(registerUser.rejected, (state, action) => {\n            state.registerStatus = 'failed';\n            state.registerError= action.error.message;\n          });\n    }\n})\n\n\nexport default cartSlice.reducer"],"mappings":"AAAA,SAASA,YAAY,QAAQ,oBAAoB;AAEjD,MAAM;EAAEC;AAAY,CAAC,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAEnD,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,GAAEC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,GAAC,EAAE;EAClFG,GAAG,EAAE,EAAE;EACPC,IAAI,EAAC,EAAE;EACPC,KAAK,EAAC,EAAE;EACRC,cAAc,EAAC,EAAE;EACjBC,aAAa,EAAC,EAAE;EAChBC,WAAW,EAAC,EAAE;EACdC,UAAU,EAAC,EAAE;EACbC,UAAU,EAAE;AAEhB,CAAC;AACD,MAAMC,SAAS,GAAGhB,WAAW,CAAC;EAC1BS,IAAI,EAAC,MAAM;EACXP,YAAY;EACZe,OAAO,EAAG,CAAC,CAAE;EACbC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACJC,OAAO,CAACrB,YAAY,CAACsB,OAAO,EAAGC,KAAK,IAAK;MACxCA,KAAK,CAACX,cAAc,GAAG,SAAS;IAClC,CAAC,CAAC,CACDS,OAAO,CAACrB,YAAY,CAACwB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAClD,IAAGA,MAAM,CAACC,OAAO,EAAE,CAEnB,CAAC,MAAKC,KAAK;MACXJ,KAAK,CAACX,cAAc,GAAG,WAAW;MAClCW,KAAK,CAACnB,KAAK,GAAGqB,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC,CACDL,OAAO,CAACrB,YAAY,CAAC4B,QAAQ,EAAE,CAACL,KAAK,EAAEE,MAAM,KAAK;MACjDF,KAAK,CAACX,cAAc,GAAG,QAAQ;MAC/BW,KAAK,CAACV,aAAa,GAAEY,MAAM,CAACI,KAAK,CAACC,OAAO;IAC3C,CAAC,CAAC;EACR;AACJ,CAAC,CAAC;AAGF,eAAeb,SAAS,CAACC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}